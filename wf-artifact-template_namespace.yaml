apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: wf-artifact
  namespace: argo
spec:
  entrypoint: dag-template
  arguments:
    parameters:
    - name: message1
      value: Task 1 ist fertig!
    - name: message2
      value: Task 2 ist beendet!
  templates:
  - name: dag-template
    inputs:
      parameters:
      - name: message1
      - name: message2
    dag:
      tasks:
      - name: Task1
        arguments:
          parameters: [{name: text, value: "{{inputs.parameters.message1}}"}]
        template: task-template
      - name: Task2
        arguments:
          parameters: [{name: text, value: "{{inputs.parameters.message2}}"}]
        dependencies: [Task1]
        template: task-template
      - name: Task3
        dependencies: [Task1]
        template: task-output-artifact
      - name: Task4
        arguments:
          artifacts: [{name: text, from: "{{tasks.Task3.outputs.artifacts.artifact-out}}"}]
        dependencies: [Task2, Task3]
        template: task-input-artifact

  - name: task-template
    inputs:
      parameters:
      - name: text
    script:
      image: python:3.8-slim
      command: [python]
      source: |
        p = "{{inputs.parameters.text}}"
        print(p)
  
  - name: task-output-artifact
    script:
      image: node:9.1-alpine
      command: [node]
      source: |
        var par = "Welche Parameter auch immer in die Datei geschrieben werden.";
        const fs = require('fs');
        fs.writeFile("/tmp/output-params.txt", par);
    outputs:
      artifacts:
      - name: artifact-out
        path: /tmp/output-params.txt
  
  - name: task-input-artifact
    inputs:
      artifacts:
      - name: text
        path: /tmp/text
    script:
      image: python:3.8-slim
      command: [python]
      source: |
        with open("/tmp/text", "r") as f:
          lines = f.read()
          print(lines)
